<Project>

  <!-- Security Analysis Configuration -->
  <PropertyGroup>
    <!-- Enable security analysis by default -->
    <RunSecurityCodeAnalysis Condition="'$(RunSecurityCodeAnalysis)' == ''">true</RunSecurityCodeAnalysis>
    <SecurityAnalysisLevel Condition="'$(SecurityAnalysisLevel)' == ''">7</SecurityAnalysisLevel>

    <!-- Secure development lifecycle -->
    <EnableSecureSourceGeneration Condition="'$(EnableSecureSourceGeneration)' == ''">true</EnableSecureSourceGeneration>
    <ValidateSecurityAttributes Condition="'$(ValidateSecurityAttributes)' == ''">true</ValidateSecurityAttributes>

    <!-- Cryptographic settings -->
    <EnforceCryptographicStandards Condition="'$(EnforceCryptographicStandards)' == ''">true</EnforceCryptographicStandards>
    <RequireStrongCryptography Condition="'$(RequireStrongCryptography)' == ''">true</RequireStrongCryptography>

    <!-- Input validation -->
    <ValidateUserInputs Condition="'$(ValidateUserInputs)' == ''">true</ValidateUserInputs>
    <SanitizeOutputs Condition="'$(SanitizeOutputs)' == ''">true</SanitizeOutputs>

    <!-- Dependency scanning -->
    <ScanNuGetPackages Condition="'$(ScanNuGetPackages)' == ''">true</ScanNuGetPackages>
    <ValidateDependencyIntegrity Condition="'$(ValidateDependencyIntegrity)' == ''">true</ValidateDependencyIntegrity>

    <!-- Binary analysis -->
    <PerformBinaryAnalysis Condition="'$(PerformBinaryAnalysis)' == ''">false</PerformBinaryAnalysis>
    <CheckForVulnerabilities Condition="'$(CheckForVulnerabilities)' == ''">true</CheckForVulnerabilities>
  </PropertyGroup>

  <!-- Security Analyzers -->
  <ItemGroup Condition="'$(RunSecurityCodeAnalysis)' == 'true'">
    <!-- Security-focused analyzers -->
    <PackageReference Include="SecurityCodeScan.VS2019" Version="5.6.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Cryptographic Standards -->
  <PropertyGroup Condition="'$(EnforceCryptographicStandards)' == 'true'">
    <!-- Minimum key sizes -->
    <MinimumRSAKeySize Condition="'$(MinimumRSAKeySize)' == ''">2048</MinimumRSAKeySize>
    <MinimumECCKeySize Condition="'$(MinimumECCKeySize)' == ''">256</MinimumECCKeySize>

    <!-- Allowed algorithms -->
    <AllowedHashAlgorithms Condition="'$(AllowedHashAlgorithms)' == ''">SHA256;SHA384;SHA512</AllowedHashAlgorithms>
    <AllowedSymmetricAlgorithms Condition="'$(AllowedSymmetricAlgorithms)' == ''">AES</AllowedSymmetricAlgorithms>

    <!-- Prohibited algorithms -->
    <ProhibitedAlgorithms Condition="'$(ProhibitedAlgorithms)' == ''">MD5;SHA1;DES;3DES;RC4</ProhibitedAlgorithms>
  </PropertyGroup>

  <!-- Input Validation Rules -->
  <PropertyGroup Condition="'$(ValidateUserInputs)' == 'true'">
    <!-- String validation -->
    <MaxStringLength Condition="'$(MaxStringLength)' == ''">1048576</MaxStringLength> <!-- 1MB -->
    <ValidateStringEncodings Condition="'$(ValidateStringEncodings)' == ''">true</ValidateStringEncodings>

    <!-- Numeric validation -->
    <ValidateNumericRanges Condition="'$(ValidateNumericRanges)' == ''">true</ValidateNumericRanges>
    <PreventIntegerOverflow Condition="'$(PreventIntegerOverflow)' == ''">true</PreventIntegerOverflow>

    <!-- File validation -->
    <ValidateFileExtensions Condition="'$(ValidateFileExtensions)' == ''">true</ValidateFileExtensions>
    <MaxFileSize Condition="'$(MaxFileSize)' == ''">104857600</MaxFileSize> <!-- 100MB -->

    <!-- URL validation -->
    <ValidateUrls Condition="'$(ValidateUrls)' == ''">true</ValidateUrls>
    <AllowedSchemes Condition="'$(AllowedSchemes)' == ''">https;http</AllowedSchemes>
  </PropertyGroup>

  <!-- Dependency Security -->
  <PropertyGroup Condition="'$(ScanNuGetPackages)' == 'true'">
    <!-- Vulnerability scanning -->
    <NuGetAudit Condition="'$(NuGetAudit)' == ''">true</NuGetAudit>
    <AuditLevel Condition="'$(AuditLevel)' == ''">low</AuditLevel>

    <!-- Package validation -->
    <RequirePackageSignatures Condition="'$(RequirePackageSignatures)' == ''">true</RequirePackageSignatures>
    <ValidatePackageIntegrity Condition="'$(ValidatePackageIntegrity)' == ''">true</ValidatePackageIntegrity>

    <!-- License validation -->
    <ValidateLicenses Condition="'$(ValidateLicenses)' == ''">true</ValidateLicenses>
    <AllowedLicenses Condition="'$(AllowedLicenses)' == ''">MIT;Apache-2.0;BSD-3-Clause;ISC</AllowedLicenses>
  </PropertyGroup>

  <!-- Security Compilation Flags -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <!-- Buffer overflow protection -->
    <DefineConstants>$(DefineConstants);SECURE_BUILD</DefineConstants>

    <!-- Runtime security checks -->
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>

    <!-- Assembly security -->
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <AssemblyTitle>$(ProjectName) - Secure Build</AssemblyTitle>

    <!-- Code access security (legacy .NET Framework)
    <AllowPartiallyTrustedCallers>false</AllowPartiallyTrustedCallers>
    <SecurityTransparent>false</SecurityTransparent> -->
  </PropertyGroup>

  <!-- Security Attributes -->
  <PropertyGroup Condition="'$(ValidateSecurityAttributes)' == 'true'">
    <!-- Assembly-level security -->
    <GenerateAssemblySecurityTransparentAttribute>false</GenerateAssemblySecurityTransparentAttribute>
    <GenerateAssemblyAllowPartiallyTrustedCallersAttribute>false</GenerateAssemblyAllowPartiallyTrustedCallersAttribute>

    <!-- Method-level security validation -->
    <ValidateSecurityCriticalMethods>true</ValidateSecurityCriticalMethods>
    <RequireSecurityAnnotations>true</RequireSecurityAnnotations>
  </PropertyGroup>

  <!-- Secure Source Generation -->
  <PropertyGroup Condition="'$(EnableSecureSourceGeneration)' == 'true'">
    <!-- Source generator security -->
    <ValidateSourceGenerators>true</ValidateSourceGenerators>
    <SecureSourceGeneratorExecution>true</SecureSourceGeneratorExecution>

    <!-- Generated code validation -->
    <ValidateGeneratedCode>true</ValidateGeneratedCode>
    <AnalyzeGeneratedCode>true</AnalyzeGeneratedCode>
  </PropertyGroup>

  <!-- Binary Security Analysis -->
  <PropertyGroup Condition="'$(PerformBinaryAnalysis)' == 'true'">
    <!-- Binary analysis tools -->
    <EnableBinaryAnalysis>true</EnableBinaryAnalysis>
    <BinaryAnalysisLevel>high</BinaryAnalysisLevel>

    <!-- Assembly validation -->
    <ValidateAssemblyIntegrity>true</ValidateAssemblyIntegrity>
    <CheckAssemblySignatures>true</CheckAssemblySignatures>

    <!-- Runtime protection -->
    <EnableControlFlowGuard>true</EnableControlFlowGuard>
    <EnableDataExecutionPrevention>true</EnableDataExecutionPrevention>
  </PropertyGroup>

  <!-- Security Warning Configuration -->
  <PropertyGroup>
    <!-- Elevate security warnings to errors -->
    <WarningsAsErrors Condition="'$(Configuration)' == 'Release'">$(WarningsAsErrors);CA3001;CA3002;CA3003;CA3004;CA3005;CA3006;CA3007;CA3008;CA3009;CA3010;CA3011;CA3012</WarningsAsErrors>

    <!-- Security-specific warnings -->
    <NoWarn Condition="'$(Configuration)' == 'Debug'">$(NoWarn);CA1031</NoWarn> <!-- Allow general exceptions in debug -->

    <!-- Custom security rules -->
    <CustomSecurityRules Condition="'$(CustomSecurityRules)' == ''">true</CustomSecurityRules>
  </PropertyGroup>

  <!-- Threat Modeling Integration -->
  <PropertyGroup Condition="'$(EnableThreatModeling)' == 'true'">
    <!-- Threat model validation -->
    <ValidateThreatModel>true</ValidateThreatModel>
    <ThreatModelPath Condition="'$(ThreatModelPath)' == ''">$(MSBuildProjectDirectory)\ThreatModel.tm7</ThreatModelPath>

    <!-- Security requirements -->
    <ValidateSecurityRequirements>true</ValidateSecurityRequirements>
    <SecurityRequirementsPath Condition="'$(SecurityRequirementsPath)' == ''">$(MSBuildProjectDirectory)\SecurityRequirements.json</SecurityRequirementsPath>
  </PropertyGroup>

</Project>
