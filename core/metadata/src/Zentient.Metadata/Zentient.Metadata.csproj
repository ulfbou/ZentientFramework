<!-- Zentient.Metadata Project file -->
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Template Symbols -->
    <ProjectName>Zentient.Metadata</ProjectName>
    <Author>Ulf Bourelius;Zentient Framework Team</Author>
    <Company>Zentient Framework Team</Company>
    <Description>
      The Zentient.Metadata package provides a powerful, attribute-based system for declaring and discovering metadata in your .NET applications. It shifts metadata management from an imperative, code-heavy process to a simple, declarative one, enhancing the discoverability and extensibility of your components.

      This library is built on a foundation of clean, immutable interfaces (IMetadata) and a fluent builder pattern (IMetadataBuilder), ensuring that your metadata is safe and predictable. By using attributes like [BehaviorDefinition], [CategoryDefinition], and the strongly-typed [MetadataTag&lt;TTag&gt;], you can effortlessly attach rich, discoverable information to any class or member. This makes it an ideal solution for building frameworks and platforms that rely on runtime metadata without the overhead of manually managing dictionaries or XML files.
    </Description>
    <Tags>
        zentient;framework;library;analyzers;metadata;attributes;declarative;discoverability;extensibility;framework;reflection;dependency-injection;dx;code-generation;source-generators
    </Tags>
    <Copyright>Copyright © 2025 Zentient Frameworks Team. All rights reserved.</Copyright>
    <RepositoryUrl>https://github.com/ulfbou/Zentient.Metadata.git</RepositoryUrl>

    <!-- Build Defaults -->
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>1591</NoWarn>

    <!-- Assembly Info -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>

    <!-- Output Configuration -->
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <BaseIntermediateOutputPath>obj\</BaseIntermediateOutputPath>
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>

    <!-- Packaging -->
    <IsPackable Condition="'$(IsPackable)' == '' AND '$(OutputType)' == 'Library'">true</IsPackable>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release' AND '$(IsPackable)' == 'true'">true</GeneratePackageOnBuild>
    <PackageReleaseNotes>See CHANGELOG.md for release notes and docs/ for full specification.</PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>zentient;metadata;core;builder;scanner;immutable;runtime;reflection;extensible</PackageTags>

    <!-- Feature Flags -->
    <EnableSigning Condition="'$(EnableSigning)' == ''">true</EnableSigning>
    <EnableTesting Condition="'$(EnableTesting)' == ''">true</EnableTesting>
    <EnableQuality Condition="'$(EnableQuality)' == ''">true</EnableQuality>
    <EnableSecurity Condition="'$(EnableSecurity)' == ''">true</EnableSecurity>
    <EnableDocumentation Condition="'$(EnableDocumentation)' == ''">true</EnableDocumentation>
    <EnablePerformance Condition="'$(EnablePerformance)' == ''">false</EnablePerformance>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyTitle>Zentient.Metadata</AssemblyTitle>
    <Description>Core metadata engine for Zentient Framework. See README.md and CHANGELOG.md for details.</Description>
    <Company>Zentient Framework Team</Company>
    <Authors>Zentient Framework Team</Authors>
    <Copyright>Copyright © 2025 Zentient Framework Team. All rights reserved.</Copyright>
    <PackageProjectUrl>https://github.com/ulfbou/Zentient.Metadata.git</PackageProjectUrl>
    <RepositoryUrl>https://github.com/ulfbou/Zentient.Metadata.git</RepositoryUrl>
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">1.0.0</VersionPrefix>
    <VersionSuffix Condition="'$(VersionSuffix)' == '' AND '$(Configuration)' == 'Debug'">dev</VersionSuffix>
    <Version Condition="'$(VersionSuffix)' != ''">$(VersionPrefix)-$(VersionSuffix)</Version>
    <Version Condition="'$(Version)' == ''">$(VersionPrefix)</Version>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <FileVersion>$(VersionPrefix).0</FileVersion>
    <InformationalVersion>$(Version)</InformationalVersion>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Zentient.Abstractions" Version="3.0.2" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Zentient.Metadata.Abstractions" />
    <InternalsVisibleTo Include="Zentient.Metadata.Attributes" />
    <InternalsVisibleTo Include="Zentient.Metadata.Analyzers" />
    <InternalsVisibleTo Include="Zentient.Metadata.Tests" />
  </ItemGroup>

  <!-- Imports -->
    <Import Project="Directory.Pack.props" Condition="Exists('Directory.Pack.props')" />
  <Import Project="Directory.Sign.props" Condition="Exists('Directory.Sign.props') AND '$(EnableSigning)' == 'true'" />
  <Import Project="Directory.Test.props" Condition="Exists('Directory.Test.props') AND '$(EnableTesting)' == 'true'" />
  <Import Project="Directory.Quality.props" Condition="Exists('Directory.Quality.props') AND '$(EnableQuality)' == 'true'" />
  <Import Project="Directory.Security.props" Condition="Exists('Directory.Security.props') AND '$(EnableSecurity)' == 'true'" />
  <Import Project="Directory.Documentation.props" Condition="Exists('Directory.Documentation.props') AND '$(EnableDocumentation)' == 'true'" />
  <Import Project="Directory.Performance.props" Condition="Exists('Directory.Performance.props') AND '$(EnablePerformance)' == 'true'" />

</Project>
