<Project>

  <Target Name="RunCodeAnalysis" BeforeTargets="Build" Condition="'$(RunCodeAnalysis)' == 'true'">
    <Message Text="Running code analysis..." Importance="high" />

    <PropertyGroup>
      <CodeAnalysisLogFile>$(OutputPath)CodeAnalysisLog.xml</CodeAnalysisLogFile>
    </PropertyGroup>

    <!-- Run analyzers without circular dependency -->
    <Message Text="Code analysis will run with compilation" Importance="normal" />
  </Target>

  <Target Name="ValidateDocumentation" BeforeTargets="Build" Condition="'$(GenerateDocumentationFile)' == 'true'">
    <PropertyGroup>
      <DocumentationErrors>CS1591</DocumentationErrors>
    </PropertyGroup>

    <Message Text="DEBUG: MSBuildProjectFile=$(MSBuildProjectFile), MSBuildProjectName=$(MSBuildProjectName), Configuration=$(Configuration), IsTestProject=$(IsTestProject)" Importance="high" />

    <Message Text="Validating XML documentation completeness..." Importance="high" />

    <Warning Text="Ensure all public APIs have XML documentation comments"
             Condition="'$(Configuration)' == 'Release' and '$(IsTestProject)' != 'true'" />
  </Target>
  
  <Target Name="RunStyleCopAnalysis" BeforeTargets="Build" Condition="'$(EnableStyleCopAnalyzers)' == 'true'">
    <Message Text="Running StyleCop analysis..." Importance="high" />

    <!-- StyleCop runs automatically as part of the build when the analyzer is referenced -->
    <PropertyGroup>
      <StyleCopOutputFile>$(OutputPath)StyleCopReport.xml</StyleCopOutputFile>
    </PropertyGroup>
  </Target>

  <Target Name="RunSecurityAnalysis" BeforeTargets="Build" Condition="'$(RunSecurityCodeAnalysis)' == 'true'">
    <Message Text="Running security analysis..." Importance="high" />

    <PropertyGroup>
      <SecurityAnalysisOutputFile>$(OutputPath)SecurityAnalysisReport.xml</SecurityAnalysisOutputFile>
    </PropertyGroup>

    <!-- Security analysis runs as part of the analyzers -->
  </Target>

  <Target Name="ValidateApiSurface" BeforeTargets="Build" Condition="'$(IsPackable)' == 'true' AND Exists('PublicAPI.Shipped.txt')">
    <Message Text="Validating public API surface..." Importance="high" />

    <!-- API validation is handled by Microsoft.CodeAnalysis.PublicApiAnalyzers -->
    <ItemGroup>
      <AdditionalFiles Include="PublicAPI.Shipped.txt" />
      <AdditionalFiles Include="PublicAPI.Unshipped.txt" />
    </ItemGroup>
  </Target>

  <Target Name="GenerateQualityReport" AfterTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <PropertyGroup>
      <QualityReportDir>$(OutputPath)QualityReports</QualityReportDir>
    </PropertyGroup>

    <MakeDir Directories="$(QualityReportDir)" Condition="!Exists('$(QualityReportDir)')" />

    <Message Text="Quality reports will be generated in: $(QualityReportDir)" Importance="high" />

    <!-- Copy analysis results -->
    <Copy SourceFiles="$(CodeAnalysisLogFile)"
          DestinationFolder="$(QualityReportDir)"
          Condition="Exists('$(CodeAnalysisLogFile)')" />

    <Copy SourceFiles="$(StyleCopOutputFile)"
          DestinationFolder="$(QualityReportDir)"
          Condition="Exists('$(StyleCopOutputFile)')" />

    <Copy SourceFiles="$(SecurityAnalysisOutputFile)"
          DestinationFolder="$(QualityReportDir)"
          Condition="Exists('$(SecurityAnalysisOutputFile)')" />
  </Target>

  <Target Name="ValidateQualityGates" AfterTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <Message Text="Validating quality gates..." Importance="high" />

    <!-- Quality gates are enforced by TreatWarningsAsErrors and analyzer configuration -->
    <PropertyGroup>
      <QualityGatesPassed>true</QualityGatesPassed>
    </PropertyGroup>

    <Message Text="âœ… All quality gates passed!" Importance="high" Condition="'$(QualityGatesPassed)' == 'true'" />
  </Target>

  <Target Name="CleanQualityArtifacts" BeforeTargets="Clean">
    <ItemGroup>
      <QualityArtifacts Include="$(OutputPath)CodeAnalysisLog.xml" />
      <QualityArtifacts Include="$(OutputPath)StyleCopReport.xml" />
      <QualityArtifacts Include="$(OutputPath)SecurityAnalysisReport.xml" />
      <QualityArtifacts Include="$(OutputPath)QualityReports\**\*" />
    </ItemGroup>

    <Delete Files="@(QualityArtifacts)" ContinueOnError="true" />
    <RemoveDir Directories="$(OutputPath)QualityReports" Condition="Exists('$(OutputPath)QualityReports')" />
  </Target>

  <Target Name="InstallQualityTools" BeforeTargets="Build" Condition="'$(RestoreQualityTools)' == 'true'">
    <Message Text="Installing quality analysis tools..." Importance="high" />

    <!-- Install reportgenerator for coverage reports -->
    <Exec Command="dotnet tool install --global dotnet-reportgenerator-globaltool"
          ContinueOnError="true" />

    <!-- Install security scanning tools -->
    <Exec Command="dotnet tool install --global security-scan"
          ContinueOnError="true" />
  </Target>

</Project>
